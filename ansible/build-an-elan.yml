# Run the setup effort to build an ESI ELAN
- name: Wait for ELAN guests accessibility
  hosts: localhost
  tasks:
    - name: Wait for SSH
      ansible.builtin.wait_for:
        port: 22
        host: "{{ item }}"
        search_regex: OpenSSH
        delay: 1
        timeout: 5000
      loop:
        - lxelan01
        - lxelan02
        - lxelan03

- name: Copy Intermediate CA cert to the ESI ELAN system
  hosts: dev_elan_hosts
  become: true
  roles:
    - copy-ca-to-elan
  vars:
    root_ca_key_path: "{{ hostvars['localhost']['ca_key_path'] }}"
    root_ca_csr_path: "{{ hostvars['localhost']['ca_csr_path'] }}"
    root_ca_cert_path: "{{ hostvars['localhost']['ca_cert_path'] }}"

- name: Configure services on the ESI ELAN system
  hosts: dev_elan_hosts
  become: true
  roles:
    - almalinux-gpg
    - install-base-packages
    - configure-squid
    - setup-firstboot-ipconf
    - configure-dns
    - configure-nfs
    - configure-apache
    - setup-web-resources
    - configure-haproxy
    - configure-cockpit
    #  - configure-ignition
    - setup-grafana-log-viewer
    - role: setup-data-pump
      when: ansible_architecture == "s390x"
    - setup-ocp-deployer
    - setup-icic-deployer
    - setup-finna-response
    - role: configure-lab-zvm-haproxy
      when: ansible_architecture == "s390x"

- name: Tasks for elan_1
  hosts: elan_1
  become: true
  vars:
    secret_src: '{{ "/opt/resources" if ansible_architecture == "x86_64" else "/home/support" }}'
#    content_src: '{{ "/opt/resources" if ansible_architecture == "x86_64" else "/srv/nfs/openshift-content" }}'
    content_src: /opt/resources
    local_user: '{{ "vagrant" if ansible_architecture == "x86_64" else "support" }}'
  tasks:
    - name: Patch z/VM LDAP host
      when: ansible_architecture == 's390x'
      ansible.builtin.replace:
        regexp: '^(.*) LDAPSRV.ibmpoc.internal (.*)$'
        replace: '\1 9.33.124.40 \2'
        path: /usr/local/bin/icic-setup.sh
    - name: Patch z/VM IP address
      when: ansible_architecture == 's390x'
      ansible.builtin.replace:
        regexp: '^(.*) 172.24.26.10/44444 (.*)$'
        replace: '\1 9.33.124.40/44444 \2'
        path: "{{ item }}"
      loop:
        - /opt/ansible/roles/create-cluster/tasks/boot-guest.yml
        - /opt/ansible/roles/create-cluster/tasks/guest-IPLdev.yml
        - /opt/ansible/roles/create-cluster/tasks/main.yml
        - /opt/ansible/tasks/create-guest.yml
        - /opt/ansible/tasks/delete-guest.yml
        - /etc/zvmesi/settings.env
    - name: Patch z/VM guest name
      when: ansible_architecture == 's390x'
      ansible.builtin.replace:
        regexp: '^(.*)LXOCPB01(.*)$'
        replace: '\1LXELAN01\2'
        path: "{{ item }}"
      loop:
        - /usr/local/bin/icic-setup.sh
        - /usr/local/bin/icic-setup-remote.sh
        - /usr/local/sbin/expandfs.sh
    - name: Start the SMAPI service
      when: ansible_architecture == 's390x'
      ansible.builtin.systemd:
        name: smapi.service
        state: started
    - name: Copy the pull secret
      ansible.builtin.copy:
        src: "{{ secret_src }}/.viccross-pull-secret.txt"
        dest: /var/www/html/.secret/viccross@au.ibm.com
        owner: "{{ local_user }}"
        group: root
        mode: 0664
    - name: Copy the RHOCP content module
      ansible.builtin.copy:
        src: "{{ content_src }}/rhocp-install-4.14.9.esi"
        dest: /opt/content/
        owner: "{{ local_user }}"
        group: root
        mode: 0664
    - name: Copy the ICIC content module
      ansible.builtin.copy:
        src: "{{ content_src }}/icic-1.2.1.0-fba.esi"
        dest: /opt/content/
        owner: "{{ local_user }}"
        group: root
        mode: 0664
    - name: Create the RHEL88 repo file
      when: ansible_architecture == "s390x"
      ansible.builtin.copy:
        dest: /etc/yum.repos.d/rhel88.repo
        content: |
          [BaseOS]
          name=BaseOS
          enabled=1
          baseurl=http://9.33.124.41:8080/install/rhel88/BaseOS
          [AppStream]
          name=AppStream
          enabled=1
          baseurl=http://9.33.124.41:8080/install/rhel88/AppStream
        owner: root
        mode: 0644
    - name: Get the SSH key files
      block:
        - name: Slurp ssh privkey
          tags: config
          ansible.builtin.slurp:
            src: ~/.ssh/id_ed25519
          register: elan_privkey
        - name: Slurp ssh pubkey
          tags: config
          ansible.builtin.slurp:
            src: ~/.ssh/id_ed25519.pub
          register: elan_pubkey
    - name: Start InfluxDB
      ansible.builtin.systemd:
      when: ansible_architecture == "s390x"
        name: pod-vmprf
        state: started

- name: Push the SSH key file(s)
  hosts:
    - elan_2
    - elan_3
  become: true
  tasks:
    - name: Put the SSH keys into the other hosts
      block:
        - name: Drop privkey into ssh dir
          ansible.builtin.copy:
            content: "{{ hostvars['elan_1'].elan_privkey['content'] | b64decode }}"
            dest: ~/.ssh/id_ed25519
            owner: root
            group: root
            mode: 0660
        - name: Drop public key into ssh dir
          ansible.builtin.copy:
            content: "{{ hostvars['elan_1'].elan_pubkey['content'] | b64decode }}"
            dest: ~/.ssh/id_ed25519.pub
            owner: root
            group: root
            mode: 0660
        - name: Drop public key into authorized_keys
          ansible.builtin.lineinfile:
            line: "{{ hostvars['elan_1'].elan_pubkey['content'] | b64decode }}"
            regexp: ELAN-Admin
            dest: ~/.ssh/authorized_keys

- name: Let handlers run from the previous play before starting next
  hosts: dev_elan_hosts
  become: true
  serial: 1
  roles:
    - post-provision-tasks
